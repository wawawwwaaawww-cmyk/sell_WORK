"""Help and FAQ handlers."""

from aiogram import Router, F
from app.utils.callbacks import Callbacks
from aiogram.filters import Command
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton
from typing import Optional

from app.handlers.scene_dispatcher import try_process_command
from app.models import User

router = Router()


@router.message(Command("help"))
async def help_command(message: Message, user: Optional[User] = None, **kwargs):
    """Handle /help command."""
    session = kwargs.get("session")
    if session and user:
        handled = await try_process_command(message, "/help", session=session, user=user)
        if handled:
            return
    help_text = """üÜò <b>–ü–æ–º–æ—â—å –ø–æ —Ä–∞–±–æ—Ç–µ —Å –±–æ—Ç–æ–º</b>

üöÄ <b>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
‚Ä¢ /start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
‚Ä¢ /help - –ü–æ–º–æ—â—å (—ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ)
‚Ä¢ /admin - –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞

üéØ <b>–ß—Ç–æ —è —É–º–µ—é:</b>
‚úÖ –ü—Ä–æ–≤–æ–¥–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É
‚úÖ –ü–æ–¥–±–∏—Ä–∞—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã –ø–æ–¥ –≤–∞—à–∏ —Ü–µ–ª–∏
‚úÖ –ó–∞–ø–∏—Å—ã–≤–∞—Ç—å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
‚úÖ –û—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –æ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞—Ö
‚úÖ –ü–æ–º–æ–≥–∞—Ç—å –≤—ã–±—Ä–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –∫—É—Ä—Å—ã

üí¨ <b>–ö–∞–∫ —Å–æ –º–Ω–æ–π —Ä–∞–±–æ—Ç–∞—Ç—å:</b>
1Ô∏è‚É£ –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å
2Ô∏è‚É£ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
3Ô∏è‚É£ –ü—Ä–æ–π–¥–∏—Ç–µ –∫–æ—Ä–æ—Ç–∫—É—é –∞–Ω–∫–µ—Ç—É –¥–ª—è –ª—É—á—à–∏—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π

üéÜ <b>–ü–æ–ª—É—á–∏—Ç–µ –º–∞–∫—Å–∏–º—É–º –æ—Ç –æ–±—â–µ–Ω–∏—è:</b>
‚Ä¢ –û–ø–∏—Å—ã–≤–∞–π—Ç–µ —Å–≤–æ–∏ —Ü–µ–ª–∏ –ø–æ–¥—Ä–æ–±–Ω–æ
‚Ä¢ –£–∫–∞–∑—ã–≤–∞–π—Ç–µ —Å–≤–æ–π —É—Ä–æ–≤–µ–Ω—å –æ–ø—ã—Ç–∞
‚Ä¢ –ó–∞–¥–∞–≤–∞–π—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –±—ã—Å—Ç—Ä—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π

üîÑ –ù–∞—á–Ω–∏—Ç–µ —Å –∫–æ–º–∞–Ω–¥—ã /start —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏!"""
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üöÄ –ù–∞—á–∞—Ç—å —Å /start", callback_data="restart")],
        [InlineKeyboardButton(text="üéØ –ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç", callback_data=Callbacks.SURVEY_START)],
        [InlineKeyboardButton(text="üìû –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è", callback_data=Callbacks.CONSULT_OFFER)]
    ])
    
    await message.answer(
        help_text,
        reply_markup=keyboard,
        parse_mode="HTML"
    )


@router.callback_query(F.data == "restart")
async def restart_bot(callback_query):
    """Restart bot flow."""
    await callback_query.message.edit_text(
        "üöÄ –û—Ç–ª–∏—á–Ω–æ! –ù–∞–ø–∏—à–∏—Ç–µ /start —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞."
    )
    await callback_query.answer()


def register_handlers(dp):
    """Register help handlers."""
    dp.include_router(router)
