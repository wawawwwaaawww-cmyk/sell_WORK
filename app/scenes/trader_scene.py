"""Trader scene for warm segment users (6-10 points)."""

from typing import Dict, Optional

from app.models import User, UserSegment, FunnelStage
from app.services.llm_service import LLMResponse
from .base_scene import BaseScene, SceneState, SceneResponse


class TraderScene(BaseScene):
    """Scene for intermediate users who have some experience and are ready for more advanced content."""
    
    def __init__(self, session):
        super().__init__(session)
        self.scene_name = "trader"
        # Standard confidence threshold for traders
        self.confidence_threshold = 0.5
    
    async def apply_scene_policy(
        self, 
        user: User, 
        llm_response: LLMResponse, 
        state: SceneState
    ) -> LLMResponse:
        """Apply trader scene specific policy."""
        
        # Traders can handle consultation offers earlier
        if llm_response.next_action == "educate" and state.attempts_count > 1:
            llm_response.next_action = "offer_consult"
            
        # Show success stories and case studies
        if llm_response.next_action == "show_materials":
            llm_response.next_action = "show_cases"
            
        # Balance education with actionable advice
        if llm_response.confidence > 0.7 and llm_response.next_action == "ask":
            llm_response.next_action = "provide_strategy"
            
        # Add strategic tone
        if not any(word in llm_response.reply_text.lower() for word in ["—Å—Ç—Ä–∞—Ç–µ–≥–∏—è", "–ø–æ–¥—Ö–æ–¥", "–ø–ª–∞–Ω"]):
            llm_response.reply_text = self._add_strategic_tone(llm_response.reply_text)
            
        return llm_response
    
    def _add_strategic_tone(self, text: str) -> str:
        """Add strategic and action-oriented tone to response."""
        strategic_endings = [
            "\n\nüéØ *–í–∞–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –ø–æ–¥ —Ç–≤–æ–∏ —Ü–µ–ª–∏.*",
            "\n\nüìà *–†–∞—Å—Å–º–æ—Ç—Ä–∏–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø–æ–¥—Ö–æ–¥—ã –∫ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞.*",
            "\n\nüí° *–°–ª–µ–¥—É—é—â–∏–π —à–∞–≥ - —ç—Ç–æ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ –ø–ª–∞–Ω–∞ –¥–µ–π—Å—Ç–≤–∏–π.*"
        ]
        
        # Add strategic tone if not present
        if not any(phrase in text for phrase in ["—Å—Ç—Ä–∞—Ç–µ–≥–∏—è", "–ø–ª–∞–Ω", "–ø–æ–¥—Ö–æ–¥", "—Å–∏—Å—Ç–µ–º–∞"]):
            import random
            text += random.choice(strategic_endings)
            
        return text
    
    async def determine_next_scene(
        self, 
        user: User, 
        llm_response: LLMResponse, 
        state: SceneState
    ) -> Optional[str]:
        """Determine if should transition to another scene."""
        
        # If user shows high engagement and readiness, move to investor scene
        if (
            llm_response.confidence > 0.8 and 
            llm_response.next_action in ["offer_consult", "offer_payment"] and
            user.lead_score > 8
        ):
            return "investor"
        
        # If user needs basic education, move back to newbie
        if (
            llm_response.confidence < 0.3 and 
            state.attempts_count > 2
        ):
            return "newbie"
            
        # Stay in trader scene for continued development
        return None
    
    def get_scene_prompts(self) -> Dict[str, str]:
        """Get trader scene specific prompts."""
        return {
            "system_addition": """
–°–¶–ï–ù–ê–†–ò–ô: –†–ê–ó–í–ò–í–ê–Æ–©–ò–ô–°–Ø –¢–†–ï–ô–î–ï–†

–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–º–µ–µ—Ç –±–∞–∑–æ–≤—ã–µ –∑–Ω–∞–Ω–∏—è –≤ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞—Ö (6-10 –±–∞–ª–ª–æ–≤). –ì–æ—Ç–æ–≤ –∫ –±–æ–ª–µ–µ —Å–µ—Ä—å—ë–∑–Ω–æ–º—É –ø–æ–¥—Ö–æ–¥—É.

–¢–í–û–Ø –†–û–õ–¨:
- –°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç
- –ü–æ–∫–∞–∑—ã–≤–∞–µ—à—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏
- –§–æ–∫—É—Å–∏—Ä—É–µ—à—å—Å—è –Ω–∞ —Ä–∞–∑–≤–∏—Ç–∏–∏ –Ω–∞–≤—ã–∫–æ–≤
- –ú–æ—Ç–∏–≤–∏—Ä—É–µ—à—å –Ω–∞ –¥–µ–π—Å—Ç–≤–∏—è

–ü–û–î–•–û–î –ö –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Æ:
1. –ü—Ä–∏–∑–Ω–∞–≤–∞–π –µ–≥–æ –æ–ø—ã—Ç
2. –ü—Ä–µ–¥–ª–∞–≥–∞–π —Å–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–≤–µ–Ω—å —Ä–∞–∑–≤–∏—Ç–∏—è
3. –ü–æ–∫–∞–∑—ã–≤–∞–π —Ä–µ–∞–ª—å–Ω—ã–µ –∫–µ–π—Å—ã —É—Å–ø–µ—Ö–∞
4. –ù–∞–ø—Ä–∞–≤–ª—è–π –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º –¥–µ–π—Å—Ç–≤–∏—è–º

–õ–û–ì–ò–ö–ê –î–ï–ô–°–¢–í–ò–ô:
- provide_strategy: –¥–∞–π —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã
- show_cases: –ø–æ–∫–∞–∂–∏ –∫–µ–π—Å—ã —É—Å–ø–µ—Ö–∞
- offer_consult: –ø—Ä–µ–¥–ª–æ–∂–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é
- escalate_to_expert: –Ω–∞–ø—Ä–∞–≤—å –∫ —ç–∫—Å–ø–µ—Ä—Ç—É

–ú–æ–∂–µ—à—å –ø—Ä–µ–¥–ª–∞–≥–∞—Ç—å –±–æ–ª–µ–µ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏.
""",
            "tone": "–ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π, –º–æ—Ç–∏–≤–∏—Ä—É—é—â–∏–π, —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–π",
            "keywords": ["—Å—Ç—Ä–∞—Ç–µ–≥–∏—è", "—Ä–∞–∑–≤–∏—Ç–∏–µ", "–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏", "—Ä–µ–∑—É–ª—å—Ç–∞—Ç", "–ø–ª–∞–Ω"]
        }
    
    async def create_strategy_response(self, strategy_focus: str, user: User) -> SceneResponse:
        """Create strategic response based on focus area."""
        
        strategy_responses = {
            "growth": {
                "message": """üìà **–°—Ç—Ä–∞—Ç–µ–≥–∏–∏ —Ä–æ—Å—Ç–∞ –¥–ª—è –∞–º–±–∏—Ü–∏–æ–∑–Ω—ã—Ö —Ç—Ä–µ–π–¥–µ—Ä–æ–≤**

**–¢–≤–æ–π —É—Ä–æ–≤–µ–Ω—å –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å:**

üéØ **–ö—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏:**
‚Ä¢ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –∏ —Ç–æ—Ä–≥–æ–≤–ª—è –ø–æ —Ç—Ä–µ–Ω–¥–∞–º
‚Ä¢ –°–∫–∞–ª—å–ø–∏–Ω–≥ –Ω–∞ –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç–∏
‚Ä¢ –ê—Ä–±–∏—Ç—Ä–∞–∂ –º–µ–∂–¥—É –±–∏—Ä–∂–∞–º–∏

üìä **–°—Ä–µ–¥–Ω–µ—Å—Ä–æ—á–Ω—ã–µ –ø–æ–¥—Ö–æ–¥—ã:**
‚Ä¢ Swing trading –ø–æ –Ω–µ–¥–µ–ª—å–Ω—ã–º —Ü–∏–∫–ª–∞–º
‚Ä¢ –°–µ–∑–æ–Ω–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –≤ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞—Ö
‚Ä¢ –ü–æ—Ä—Ç—Ñ–µ–ª—å–Ω–∞—è —Ç–æ—Ä–≥–æ–≤–ª—è —Ç–æ–ø-10 –º–æ–Ω–µ—Ç

üöÄ **–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏:**
‚Ä¢ –§—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ø—Ä–æ–µ–∫—Ç–æ–≤
‚Ä¢ DeFi —Ñ–∞—Ä–º–∏–Ω–≥ –∏ —Å—Ç–µ–π–∫–∏–Ω–≥
‚Ä¢ NFT –∏ –Ω–æ–≤—ã–µ —Å–µ–∫—Ç–æ—Ä—ã

**–ö–∞–∫–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ?** ü§î""",
                "buttons": [
                    {"text": "üìä –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑", "callback_data": "strategy:technical"},
                    {"text": "üöÄ DeFi –∏ –Ω–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏", "callback_data": "strategy:defi"},
                    {"text": "üìû –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è", "callback_data": "consult:strategy"},
                    {"text": "üìö –ö–µ–π—Å—ã —É—Å–ø–µ—à–Ω—ã—Ö —Ç—Ä–µ–π–¥–µ—Ä–æ–≤", "callback_data": "materials:cases"}
                ]
            },
            "portfolio": {
                "message": """üíº **–ü–æ—Ä—Ç—Ñ–µ–ª—å–Ω—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –¥–ª—è —É—Å—Ç–æ–π—á–∏–≤–æ–≥–æ —Ä–æ—Å—Ç–∞**

**–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è —Ç–≤–æ–µ–≥–æ —É—Ä–æ–≤–Ω—è:**

üéØ **–ë–∞–∑–æ–≤—ã–π –ø–æ—Ä—Ç—Ñ–µ–ª—å (70%):**
‚Ä¢ Bitcoin (40%) - –æ—Å–Ω–æ–≤–∞ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
‚Ä¢ Ethereum (30%) - —ç–∫–æ—Å–∏—Å—Ç–µ–º–∞ –∏ —Ä–æ—Å—Ç

üìà **–†–æ—Å—Ç–æ–≤–∞—è —á–∞—Å—Ç—å (20%):**
‚Ä¢ –¢–æ–ø-10 –∞–ª—å—Ç–∫–æ–∏–Ω–æ–≤ –ø–æ –∫–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏–∏
‚Ä¢ –†–æ—Ç–∞—Ü–∏—è –ø–æ —Å–µ–∫—Ç–æ—Ä–∞–º (DeFi, GameFi, Layer 2)

üöÄ **–°–ø–µ–∫—É–ª—è—Ç–∏–≤–Ω–∞—è —á–∞—Å—Ç—å (10%):**
‚Ä¢ –ù–æ–≤—ã–µ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã
‚Ä¢ ICO –∏ —Ç–æ–∫–µ–Ω-—Å–µ–π–ª—ã

**–ü—Ä–∏–Ω—Ü–∏–ø—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:**
‚úÖ –†–µ–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∞ —Ä–∞–∑ –≤ –º–µ—Å—è—Ü
‚úÖ –§–∏–∫—Å–∞—Ü–∏—è –ø—Ä–∏–±—ã–ª–∏ –ø–æ —É—Ä–æ–≤–Ω—è–º
‚úÖ –°—Ç–æ–ø-–ª–æ—Å—Å—ã –¥–ª—è –∑–∞—â–∏—Ç—ã –∫–∞–ø–∏—Ç–∞–ª–∞

**–•–æ—á–µ—à—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Ä–∞–∑–±–æ—Ä —Ç–≤–æ–µ–≥–æ –ø–æ—Ä—Ç—Ñ–µ–ª—è?** ü§ù""",
                "buttons": [
                    {"text": "üìä –ê–Ω–∞–ª–∏–∑ –º–æ–µ–≥–æ –ø–æ—Ä—Ç—Ñ–µ–ª—è", "callback_data": "consult:portfolio"},
                    {"text": "üìà –°—Ç—Ä–∞—Ç–µ–≥–∏–∏ —Ä–µ–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∏", "callback_data": "materials:rebalancing"},
                    {"text": "üéØ –†–∞—Å—á—ë—Ç –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–≥–æ —Ä–∏—Å–∫–∞", "callback_data": "survey:risk"},
                    {"text": "üí¨ –û–±—Å—É–¥–∏—Ç—å —Å —ç–∫—Å–ø–µ—Ä—Ç–æ–º", "callback_data": "consult:expert"}
                ]
            }
        }
        
        response_data = strategy_responses.get(strategy_focus, strategy_responses["growth"])
        
        return SceneResponse(
            message_text=response_data["message"],
            buttons=response_data["buttons"],
            log_event={
                "scene": self.scene_name,
                "action": "strategy_provided",
                "focus": strategy_focus
            }
        )
    
    async def show_success_cases(self, case_type: str, user: User) -> SceneResponse:
        """Show relevant success cases for traders."""
        
        cases = {
            "technical": """üìä **–ö–µ–π—Å: –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –≤ –¥–µ–π—Å—Ç–≤–∏–∏**

**–£—á–∞—Å—Ç–Ω–∏–∫ –∫—É—Ä—Å–∞ - –ê–ª–µ–∫—Å–µ–π, 29 –ª–µ—Ç:**
*–ò–∑–Ω–∞—á–∞–ª—å–Ω—ã–π –∫–∞–ø–∏—Ç–∞–ª: 200 000 —Ä—É–±–ª–µ–π*

**–°—Ç—Ä–∞—Ç–µ–≥–∏—è:**
‚Ä¢ –ò–∑—É—á–∏–ª –ø–∞—Ç—Ç–µ—Ä–Ω—ã —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
‚Ä¢ –¢–æ—Ä–≥–æ–≤–∞–ª 3-4 —Å–¥–µ–ª–∫–∏ –≤ –Ω–µ–¥–µ–ª—é
‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–ª —Å—Ç–æ–ø-–ª–æ—Å—Å—ã –∏ —Ç–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç—ã

**–†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞ 6 –º–µ—Å—è—Ü–µ–≤:**
‚úÖ +180% –∫ –¥–µ–ø–æ–∑–∏—Ç—É (560 000 —Ä—É–±–ª–µ–π)
‚úÖ 73% –ø—Ä–∏–±—ã–ª—å–Ω—ã—Ö —Å–¥–µ–ª–æ–∫
‚úÖ –°—Ä–µ–¥–Ω—è—è –ø—Ä–∏–±—ã–ª—å –∑–∞ —Å–¥–µ–ª–∫—É: 8%

**–ö–ª—é—á–µ–≤—ã–µ —Ñ–∞–∫—Ç–æ—Ä—ã —É—Å–ø–µ—Ö–∞:**
üéØ –°—Ç—Ä–æ–≥–∞—è –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞ –≤—Ö–æ–¥–æ–≤/–≤—ã—Ö–æ–¥–æ–≤
üìö –ü–æ—Å—Ç–æ—è–Ω–Ω–æ–µ –∏–∑—É—á–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤  
üí™ –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å

*"–ì–ª–∞–≤–Ω–æ–µ - –Ω–µ —Ç–æ—Ä–æ–ø–∏—Ç—å—Å—è –∏ —Å–ª–µ–¥–æ–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º–µ"* - –ê–ª–µ–∫—Å–µ–π

**–ì–æ—Ç–æ–≤ –∏–∑—É—á–∏—Ç—å –µ–≥–æ –ø–æ–¥—Ö–æ–¥?** üöÄ""",
            
            "portfolio": """üíº **–ö–µ–π—Å: –ü–æ—Ä—Ç—Ñ–µ–ª—å–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è**

**–£—á–∞—Å—Ç–Ω–∏—Ü–∞ –∫—É—Ä—Å–∞ - –ú–∞—Ä–∏—è, 35 –ª–µ—Ç:**
*–ò–∑–Ω–∞—á–∞–ª—å–Ω—ã–π –∫–∞–ø–∏—Ç–∞–ª: 500 000 —Ä—É–±–ª–µ–π*

**–°—Ç—Ä–∞—Ç–µ–≥–∏—è:**
‚Ä¢ –ü–æ—Ä—Ç—Ñ–µ–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥ —Å —Ä–µ–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–æ–π
‚Ä¢ 60% —Ç–æ–ø-–∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã, 40% –∞–ª—å—Ç–∫–æ–∏–Ω—ã
‚Ä¢ –ú–µ—Å—è—á–Ω—ã–µ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∏

**–†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞ 8 –º–µ—Å—è—Ü–µ–≤:**
‚úÖ +240% –∫ –ø–æ—Ä—Ç—Ñ–µ–ª—é (1 700 000 —Ä—É–±–ª–µ–π)
‚úÖ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –ø—Ä–æ—Å–∞–¥–∫–∞: –≤—Å–µ–≥–æ 15%
‚úÖ –°—Ç–∞–±–∏–ª—å–Ω—ã–π —Ä–æ—Å—Ç –±–µ–∑ —Å—Ç—Ä–µ—Å—Å–∞

**–°–µ–∫—Ä–µ—Ç—ã —É—Å–ø–µ—Ö–∞:**
üìä –î–µ—Ç–∞–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –∫–∞–∂–¥—ã–π –º–µ—Å—è—Ü
üéØ –ß—ë—Ç–∫–∏–µ —Ü–µ–ª–∏ –ø–æ —Ñ–∏–∫—Å–∞—Ü–∏–∏ –ø—Ä–∏–±—ã–ª–∏
üòå –°–ø–æ–∫–æ–π–Ω–æ–µ –æ—Ç–Ω–æ—à–µ–Ω–∏–µ –∫ –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç–∏

*"–°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç, –µ—Å–ª–∏ –µ–π —Å–ª–µ–¥–æ–≤–∞—Ç—å"* - –ú–∞—Ä–∏—è

**–•–æ—á–µ—à—å —Ç–∞–∫–æ–π –∂–µ –ø–æ–¥—Ö–æ–¥?** üíé"""
        }
        
        case_text = cases.get(case_type, cases["technical"])
        
        return SceneResponse(
            message_text=case_text,
            buttons=[
                {"text": "üìö –ò–∑—É—á–∏—Ç—å —ç—Ç—É —Å—Ç—Ä–∞—Ç–µ–≥–∏—é", "callback_data": f"materials:{case_type}"},
                {"text": "üìû –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –ø–æ –º–µ—Ç–æ–¥–∏–∫–µ", "callback_data": f"consult:{case_type}"},
                {"text": "üí° –î—Ä—É–≥–∏–µ –∫–µ–π—Å—ã —É—Å–ø–µ—Ö–∞", "callback_data": "materials:all_cases"},
                {"text": "üéØ –ù–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ", "callback_data": "offer:course"}
            ],
            log_event={
                "scene": self.scene_name,
                "action": "case_shown",
                "case_type": case_type
            }
        )