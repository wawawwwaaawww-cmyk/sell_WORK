"""Newbie scene for cold segment users (0-5 points)."""

from typing import Dict, Optional

from app.models import User, UserSegment, FunnelStage
from app.services.llm_service import LLMResponse
from .base_scene import BaseScene, SceneState, SceneResponse


class NewbieScene(BaseScene):
    """Scene for newbie users who need education and gentle guidance."""
    
    def __init__(self, session):
        super().__init__(session)
        self.scene_name = "newbie"
        # Lower confidence threshold for newbies
        self.confidence_threshold = 0.4
    
    async def apply_scene_policy(
        self, 
        user: User, 
        llm_response: LLMResponse, 
        state: SceneState
    ) -> LLMResponse:
        """Apply newbie scene specific policy."""
        
        # Newbies need more education before offers
        if llm_response.next_action == "offer_payment":
            llm_response.next_action = "show_materials"
            
        # Don't offer consultation too early
        if llm_response.next_action == "offer_consult" and state.attempts_count < 3:
            llm_response.next_action = "educate"
            
        # Focus on building trust and understanding
        if llm_response.next_action == "ask" and state.attempts_count > 2:
            llm_response.next_action = "show_materials"
            
        # Add educational tone
        if not any(word in llm_response.reply_text.lower() for word in ["–≤–∞–∂–Ω–æ", "–ø–æ–Ω–∏–º–∞—Ç—å", "–∏–∑—É—á–∏—Ç—å"]):
            llm_response.reply_text = self._add_educational_tone(llm_response.reply_text)
            
        return llm_response
    
    def _add_educational_tone(self, text: str) -> str:
        """Add educational and supportive tone to response."""
        educational_endings = [
            "\n\nüí° *–í–∞–∂–Ω–æ –ø–æ–Ω–∏–º–∞—Ç—å –æ—Å–Ω–æ–≤—ã, –ø—Ä–µ–∂–¥–µ —á–µ–º –¥–µ–ª–∞—Ç—å –ø–µ—Ä–≤—ã–µ —à–∞–≥–∏.*",
            "\n\nüìö *–†–µ–∫–æ–º–µ–Ω–¥—É—é —Å–Ω–∞—á–∞–ª–∞ –∏–∑—É—á–∏—Ç—å –±–∞–∑–æ–≤—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã.*",
            "\n\nüéØ *–ù–∞—á–Ω—ë–º —Å –ø—Ä–æ—Å—Ç–æ–≥–æ –∏ –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ —É–≥–ª—É–±–∏–º—Å—è –≤ –¥–µ—Ç–∞–ª–∏.*"
        ]
        
        # Add one of the educational endings if text doesn't already have educational tone
        if not any(phrase in text for phrase in ["–≤–∞–∂–Ω–æ", "–∏–∑—É—á–∏—Ç—å", "–ø–æ–Ω–∏–º–∞—Ç—å", "–æ—Å–Ω–æ–≤—ã"]):
            import random
            text += random.choice(educational_endings)
            
        return text
    
    async def determine_next_scene(
        self, 
        user: User, 
        llm_response: LLMResponse, 
        state: SceneState
    ) -> Optional[str]:
        """Determine if should transition to another scene."""
        
        # If user shows readiness for more advanced content
        if (
            llm_response.confidence > 0.8 and 
            llm_response.next_action == "offer_consult" and
            state.attempts_count > 3
        ):
            # Check if user has progressed enough to move to trader scene
            if user.lead_score > 5:
                return "trader"
                
        # If user needs immediate help, escalate
        if llm_response.next_action == "escalate_to_manager":
            return None  # Stay in scene but escalate
            
        # Generally stay in newbie scene for extended education
        return None
    
    def get_scene_prompts(self) -> Dict[str, str]:
        """Get newbie scene specific prompts."""
        return {
            "system_addition": """
–°–¶–ï–ù–ê–†–ò–ô: –ù–û–í–ò–ß–û–ö –í –ö–†–ò–ü–¢–û–í–ê–õ–Æ–¢–ê–•

–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –Ω–æ–≤–∏—á–æ–∫ –≤ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞—Ö (0-5 –±–∞–ª–ª–æ–≤). –¢—Ä–µ–±—É–µ—Ç —Ç–µ—Ä–ø–µ–ª–∏–≤–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è.

–¢–í–û–Ø –†–û–õ–¨:
- –¢–µ—Ä–ø–µ–ª–∏–≤—ã–π –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫ –∏ —É—á–∏—Ç–µ–ª—å
- –û–±—ä—è—Å–Ω—è–µ—à—å —Å–ª–æ–∂–Ω—ã–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏ –ø—Ä–æ—Å—Ç—ã–º–∏ —Å–ª–æ–≤–∞–º–∏
- –ù–µ —Ç–æ—Ä–æ–ø–∏—à—å —Å —Ä–µ—à–µ–Ω–∏—è–º–∏
- –î–∞—ë—à—å –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã

–ü–†–ò–ù–¶–ò–ü–´ –†–ê–ë–û–¢–´:
1. –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –ø—Ä–µ–≤—ã—à–µ –≤—Å–µ–≥–æ
2. –ü–æ—à–∞–≥–æ–≤–æ–µ –æ–±—É—á–µ–Ω–∏–µ
3. –ú–Ω–æ–≥–æ –ø—Ä–∏–º–µ—Ä–æ–≤ –∏ –∞–Ω–∞–ª–æ–≥–∏–π
4. –ú–æ—Ç–∏–≤–∞—Ü–∏—è —á–µ—Ä–µ–∑ –∏—Å—Ç–æ—Ä–∏–∏ —É—Å–ø–µ—Ö–∞

–õ–û–ì–ò–ö–ê –î–ï–ô–°–¢–í–ò–ô:
- educate: –¥–∞–π –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
- show_materials: –ø–æ–∫–∞–∂–∏ –±–∞–∑–æ–≤—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
- ask: –∑–∞–¥–∞–π —É—Ç–æ—á–Ω—è—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã
- build_trust: —Ä–∞—Å—Å–∫–∞–∂–∏ –æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ –Ω–∞–¥—ë–∂–Ω–æ—Å—Ç–∏

–ù–ï –ø—Ä–µ–¥–ª–∞–≥–∞–π —Å–ª–æ–∂–Ω—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –∏–ª–∏ –±—ã—Å—Ç—Ä—ã–µ —Ä–µ—à–µ–Ω–∏—è.
""",
            "tone": "–¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π, —Ç–µ—Ä–ø–µ–ª–∏–≤—ã–π, –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π",
            "keywords": ["–æ—Å–Ω–æ–≤—ã", "–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å", "–ø–æ—à–∞–≥–æ–≤–æ", "–∏–∑—É—á–µ–Ω–∏–µ", "–ø–æ–Ω–∏–º–∞–Ω–∏–µ"]
        }
    
    async def create_educational_response(self, topic: str, user: User) -> SceneResponse:
        """Create educational response for specific topic."""
        
        educational_responses = {
            "basics": {
                "message": """üéì **–û—Å–Ω–æ–≤—ã –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç - —Ç–≤–æ–π –ø–µ—Ä–≤—ã–π —à–∞–≥!**

**–ß—Ç–æ —Ç–∞–∫–æ–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã –ø—Ä–æ—Å—Ç—ã–º–∏ —Å–ª–æ–≤–∞–º–∏:**
‚Ä¢ –¶–∏—Ñ—Ä–æ–≤—ã–µ –¥–µ–Ω—å–≥–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞–±–æ—Ç–∞—é—Ç —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç
‚Ä¢ –ó–∞—â–∏—â–µ–Ω—ã —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–π —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–µ–π - –±–ª–æ–∫—á–µ–π–Ω–æ–º
‚Ä¢ –ù–µ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É—é—Ç—Å—è –±–∞–Ω–∫–∞–º–∏ –∏–ª–∏ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–æ–º

**–ü–æ—á–µ–º—É –æ–Ω–∏ –ø–æ–ø—É–ª—è—Ä–Ω—ã:**
‚úÖ –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª —Ä–æ—Å—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏
‚úÖ –ù–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π
‚úÖ –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è –±—É–¥—É—â–µ–≥–æ

**–° —á–µ–≥–æ –Ω–∞—á–∞—Ç—å:**
1. –ò–∑—É—á–∏—Ç—å –æ—Å–Ω–æ–≤—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
2. –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å –Ω–µ–±–æ–ª—å—à–æ–π —Å—É–º–º—ã
3. –ü–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ —É–≥–ª—É–±–ª—è—Ç—å –∑–Ω–∞–Ω–∏—è

üí° *–ü–æ–º–Ω–∏: –∑–Ω–∞–Ω–∏—è - —Ç–≤–æ—è –≥–ª–∞–≤–Ω–∞—è –∑–∞—â–∏—Ç–∞ –æ—Ç –æ—à–∏–±–æ–∫!*""",
                "buttons": [
                    {"text": "üìö –ú–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤", "callback_data": "materials:beginners"},
                    {"text": "üõ° –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –≤ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞—Ö", "callback_data": "educate:safety"},
                    {"text": "üí¨ –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å", "callback_data": "ask:question"}
                ]
            },
            "safety": {
                "message": """üõ° **–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å - —ç—Ç–æ –æ—Å–Ω–æ–≤–∞ –≤—Å–µ–≥–æ!**

**–ì–ª–∞–≤–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏:**
1. **–ù–∏–∫–æ–≥–¥–∞ –Ω–µ –¥–µ–ª–∏—Å—å –ø–∞—Ä–æ–ª—è–º–∏** - –¥–∞–∂–µ —Å –±–ª–∏–∑–∫–∏–º–∏
2. **–ò—Å–ø–æ–ª—å–∑—É–π —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã** - Binance, Coinbase
3. **–ù–∞—á–∏–Ω–∞–π —Å –º–∞–ª–æ–≥–æ** - –Ω–µ –∏–Ω–≤–µ—Å—Ç–∏—Ä—É–π –≤—Å–µ —Å–±–µ—Ä–µ–∂–µ–Ω–∏—è
4. **–í–∫–ª—é—á–∞–π –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω—É—é –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é** - –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞—â–∏—Ç–∞

**–ö–∞–∫ –∏–∑–±–µ–∂–∞—Ç—å –º–æ—à–µ–Ω–Ω–∏–∫–æ–≤:**
‚ùå –ù–µ –≤–µ—Ä—å –æ–±–µ—â–∞–Ω–∏—è–º –±—ã—Å—Ç—Ä–æ–≥–æ –æ–±–æ–≥–∞—â–µ–Ω–∏—è
‚ùå –ù–µ –æ—Ç–ø—Ä–∞–≤–ª—è–π –¥–µ–Ω—å–≥–∏ –Ω–µ–∑–Ω–∞–∫–æ–º—Ü–∞–º
‚ùå –ù–µ –ø–æ–∫—É–ø–∞–π –ø–æ —Å–æ–≤–µ—Ç–∞–º –∏–∑ —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∞—Ç–æ–≤

‚úÖ **–ò–∑—É—á–∞–π, –ø—Ä–æ–≤–µ—Ä—è–π, –¥—É–º–∞–π –≥–æ–ª–æ–≤–æ–π!**

üí° *–õ—É—á—à–µ –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å –≤—Ä–µ–º—è –Ω–∞ –∏–∑—É—á–µ–Ω–∏–µ, —á–µ–º –ø–æ—Ç–µ—Ä—è—Ç—å –¥–µ–Ω—å–≥–∏ –∏–∑-–∑–∞ —Å–ø–µ—à–∫–∏.*""",
                "buttons": [
                    {"text": "üìñ –ü–æ–¥—Ä–æ–±–Ω—ã–π –≥–∞–π–¥ –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏", "callback_data": "materials:security"},
                    {"text": "üéØ –ì–æ—Ç–æ–≤ –∏–∑—É—á–∞—Ç—å –¥–∞–ª—å—à–µ", "callback_data": "educate:basics"},
                    {"text": "üìû –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏", "callback_data": "consult:safety"}
                ]
            }
        }
        
        response_data = educational_responses.get(topic, educational_responses["basics"])
        
        return SceneResponse(
            message_text=response_data["message"],
            buttons=response_data["buttons"],
            log_event={
                "scene": self.scene_name,
                "action": "education_provided",
                "topic": topic
            }
        )
    
    async def handle_user_question(self, question: str, user: User) -> SceneResponse:
        """Handle specific user questions with educational approach."""
        
        # Common newbie questions and responses
        if any(word in question.lower() for word in ["—Å–∫–æ–ª—å–∫–æ", "–¥–µ–Ω–µ–≥", "–≤–ª–æ–∂–∏—Ç—å"]):
            return SceneResponse(
                message_text="""üí∞ **–û—Ç–ª–∏—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å –æ —Å—Ç–∞—Ä—Ç–æ–≤–æ–º –∫–∞–ø–∏—Ç–∞–ª–µ!**

**–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ø—Ä–∏–Ω—Ü–∏–ø:**
–ù–∞—á–∏–Ω–∞–π —Å —Å—É–º–º—ã, –∫–æ—Ç–æ—Ä—É—é –Ω–µ —Å—Ç—Ä–∞—à–Ω–æ –ø–æ—Ç–µ—Ä—è—Ç—å - –æ–±—ã—á–Ω–æ —ç—Ç–æ 5-10% –æ—Ç —Ç–≤–æ–∏—Ö —Å–±–µ—Ä–µ–∂–µ–Ω–∏–π.

**–ü—Ä–∏–º–µ—Ä—ã:**
‚Ä¢ –ï—Å—Ç—å 100 000 —Ä—É–± ‚Üí –Ω–∞—á–Ω–∏ —Å 5-10 —Ç—ã—Å—è—á
‚Ä¢ –ï—Å—Ç—å 50 000 —Ä—É–± ‚Üí –Ω–∞—á–Ω–∏ —Å 2-5 —Ç—ã—Å—è—á
‚Ä¢ –ï—Å—Ç—å 20 000 —Ä—É–± ‚Üí –Ω–∞—á–Ω–∏ —Å 1-2 —Ç—ã—Å—è—á

**–ü–æ—á–µ–º—É —Ç–∞–∫:**
‚úÖ –°–Ω–∏–∂–∞–µ—à—å —Å—Ç—Ä–µ—Å—Å –∏ —ç–º–æ—Ü–∏–∏
‚úÖ –ú–æ–∂–µ—à—å —Å–ø–æ–∫–æ–π–Ω–æ —É—á–∏—Ç—å—Å—è
‚úÖ –ù–µ —Ä–∏—Å–∫—É–µ—à—å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã–º–∏ –¥–µ–Ω—å–≥–∞–º–∏

üí° *–ü–æ–º–Ω–∏: —Ü–µ–ª—å –ø–µ—Ä–≤—ã—Ö –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π - –ø–æ–ª—É—á–∏—Ç—å –æ–ø—ã—Ç, –∞ –Ω–µ –±–æ–ª—å—à—É—é –ø—Ä–∏–±—ã–ª—å.*""",
                buttons=[
                    {"text": "üìä –ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ —Ä–∞—Å—á—ë—Ç–∞", "callback_data": "survey:start"},
                    {"text": "üìö –ú–∞—Ç–µ—Ä–∏–∞–ª—ã –æ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ –±—é–¥–∂–µ—Ç–∞", "callback_data": "materials:budget"},
                    {"text": "üìû –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è", "callback_data": "consult:offer"}
                ]
            )
        
        # Default educational response
        return SceneResponse(
            message_text="""ü§î **–ü–æ–Ω–∏–º–∞—é —Ç–≤–æ–π –≤–æ–ø—Ä–æ—Å!**

–≠—Ç–æ –≤–∞–∂–Ω–∞—è —Ç–µ–º–∞, –∏ —è —Ö–æ—á—É –¥–∞—Ç—å —Ç–µ–±–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–ª–µ–∑–Ω—ã–π –æ—Ç–≤–µ—Ç.

–õ—É—á—à–µ –≤—Å–µ–≥–æ –º—ã —Å–º–æ–∂–µ–º —Ä–∞–∑–æ–±—Ä–∞—Ç—å —Ç–≤–æ–π –≤–æ–ø—Ä–æ—Å –Ω–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏, –≥–¥–µ —ç–∫—Å–ø–µ—Ä—Ç —Å–º–æ–∂–µ—Ç —É—á–µ—Å—Ç—å —Ç–≤–æ—é –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é —Å–∏—Ç—É–∞—Ü–∏—é.

–ê –ø–æ–∫–∞ –ø—Ä–µ–¥–ª–∞–≥–∞—é –∏–∑—É—á–∏—Ç—å –±–∞–∑–æ–≤—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã - –æ–Ω–∏ –æ—Ç–≤–µ—Ç—è—Ç –Ω–∞ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –≤–æ–ø—Ä–æ—Å–æ–≤ –Ω–æ–≤–∏—á–∫–æ–≤! üìö""",
            buttons=[
                {"text": "üìö –ú–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤", "callback_data": "materials:beginners"},
                {"text": "üìû –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é", "callback_data": "consult:offer"},
                {"text": "üìä –ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç —Å–∞–º–æ–æ—Ü–µ–Ω–∫–∏", "callback_data": "survey:start"}
            ]
        )