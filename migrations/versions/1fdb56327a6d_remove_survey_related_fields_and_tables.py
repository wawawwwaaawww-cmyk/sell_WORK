"""Remove survey-related fields and tables

Revision ID: 1fdb56327a6d
Revises: b2325450231f
Create Date: 2025-10-19 21:33:27.740771

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '1fdb56327a6d'
down_revision: Union[str, None] = 'b2325450231f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('survey_answers')
    op.drop_constraint('ab_tests_winner_variant_id_fkey', 'ab_tests', type_='foreignkey')
    op.drop_constraint('_user_slot_utc_uc', 'appointments', type_='unique')
    op.alter_column('lead_events', 'payload',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=False,
               existing_server_default=sa.text("'{}'::jsonb"))
    op.drop_index('ix_lead_events_event_type', table_name='lead_events')
    op.drop_index('ix_lead_events_lead_id_created_at', table_name='lead_events')
    op.alter_column('leads', 'sales_script_model',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=120),
               existing_nullable=True)
    op.drop_constraint('leads_recommended_product_id_fkey', 'leads', type_='foreignkey')
    op.drop_column('leads', 'segment')
    op.drop_column('leads', 'product_reason')
    op.drop_column('leads', 'recommended_product_id')
    op.drop_column('leads', 'admin_channel_message_id')
    op.drop_column('leads', 'answers_json')
    op.drop_column('leads', 'slot_utc')
    op.drop_column('leads', 'lead_level_percent')
    op.drop_column('leads', 'slot_msk')
    op.drop_column('leads', 'recommended_product_name')
    op.drop_column('leads', 'matched_answers')
    op.drop_column('leads', 'product_score')
    op.drop_column('leads', 'lid_signature_json')
    op.drop_column('users', 'msgs_since_skip')
    op.drop_column('users', 'survey_completed_at')
    op.drop_column('users', 'offer_attempt')
    op.drop_column('users', 'survey_offer_snooze_until')
    op.drop_column('users', 'survey_skipped_at')
    op.drop_column('users', 'survey_completed')
    op.drop_column('users', 'last_offer_at')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('last_offer_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('survey_completed', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('survey_skipped_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('survey_offer_snooze_until', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('offer_attempt', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('survey_completed_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('msgs_since_skip', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False))
    op.add_column('leads', sa.Column('lid_signature_json', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('leads', sa.Column('product_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('leads', sa.Column('matched_answers', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('leads', sa.Column('recommended_product_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('leads', sa.Column('slot_msk', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
    op.add_column('leads', sa.Column('lead_level_percent', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('leads', sa.Column('slot_utc', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('leads', sa.Column('answers_json', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('leads', sa.Column('admin_channel_message_id', sa.BIGINT(), autoincrement=False, nullable=True))
    op.add_column('leads', sa.Column('recommended_product_id', sa.BIGINT(), autoincrement=False, nullable=True))
    op.add_column('leads', sa.Column('product_reason', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('leads', sa.Column('segment', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
    op.create_foreign_key('leads_recommended_product_id_fkey', 'leads', 'products', ['recommended_product_id'], ['id'])
    op.alter_column('leads', 'sales_script_model',
               existing_type=sa.String(length=120),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)
    op.create_index('ix_lead_events_lead_id_created_at', 'lead_events', ['lead_id', 'created_at'], unique=False)
    op.create_index('ix_lead_events_event_type', 'lead_events', ['event_type'], unique=False)
    op.alter_column('lead_events', 'payload',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=False,
               existing_server_default=sa.text("'{}'::jsonb"))
    op.create_unique_constraint('_user_slot_utc_uc', 'appointments', ['user_id', 'slot_utc'])
    op.create_foreign_key('ab_tests_winner_variant_id_fkey', 'ab_tests', 'ab_variants', ['winner_variant_id'], ['id'])
    op.create_table('survey_answers',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('question_code', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('answer_code', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('points', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='survey_answers_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='survey_answers_pkey')
    )
    # ### end Alembic commands ###